{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, Button, Icon } from 'react-native-elements';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {};\n  return _jsxs(KeyboardAwareScrollView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.logo,\n      children: [_jsx(Ionicons, {\n        name: \"cafe-outline\",\n        size: 80,\n        color: \"#61DAFB\"\n      }), _jsx(Text, {\n        style: styles.logoText,\n        children: \"Meu App\"\n      })]\n    }), _jsx(Input, {\n      placeholder: \"Email\",\n      leftIcon: _jsx(Icon, {\n        name: \"email\",\n        size: 24,\n        color: \"black\"\n      }),\n      onChangeText: setEmail,\n      value: email\n    }), _jsx(Input, {\n      placeholder: \"Senha\",\n      leftIcon: _jsx(Icon, {\n        name: \"lock\",\n        size: 24,\n        color: \"black\"\n      }),\n      secureTextEntry: true,\n      onChangeText: setPassword,\n      value: password\n    }), _jsx(Button, {\n      title: \"Entrar\",\n      onPress: handleLogin\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 20\n  },\n  logo: {\n    alignItems: 'center',\n    marginBottom: 30\n  },\n  logoText: {\n    fontSize: 24,\n    marginTop: 10\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","Input","Button","Icon","KeyboardAwareScrollView","Ionicons","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","style","styles","container","children","logo","name","size","color","logoText","placeholder","leftIcon","onChangeText","value","secureTextEntry","title","onPress","create","flex","backgroundColor","padding","alignItems","marginBottom","fontSize","marginTop"],"sources":["C:/Evandro/Pi geral/projeto/paginas/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { Input, Button, Icon } from 'react-native-elements';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // implementar a lógica de autenticação aqui\r\n  };\r\n\r\n  return (\r\n    <KeyboardAwareScrollView style={styles.container}>\r\n      <View style={styles.logo}>\r\n        <Ionicons name=\"cafe-outline\" size={80} color=\"#61DAFB\" />\r\n        <Text style={styles.logoText}>Meu App</Text>\r\n      </View>\r\n      <Input\r\n        placeholder=\"Email\"\r\n        leftIcon={<Icon name=\"email\" size={24} color=\"black\" />}\r\n        onChangeText={setEmail}\r\n        value={email}\r\n      />\r\n      <Input\r\n        placeholder=\"Senha\"\r\n        leftIcon={<Icon name=\"lock\" size={24} color=\"black\" />}\r\n        secureTextEntry\r\n        onChangeText={setPassword}\r\n        value={password}\r\n      />\r\n      <Button title=\"Entrar\" onPress={handleLogin} />\r\n    </KeyboardAwareScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    padding: 20,\r\n  },\r\n  logo: {\r\n    alignItems: 'center',\r\n    marginBottom: 30,\r\n  },\r\n  logoText: {\r\n    fontSize: 24,\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nexport default LoginScreen;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAExC,SAASC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,uBAAuB;AAC3D,SAASC,uBAAuB,QAAQ,yCAAyC;AACjF,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9C,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,IAAAC,SAAA,GAA0Bd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgCnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS,CAE1B,CAAC;EAED,OACEX,KAAA,CAACL,uBAAuB;IAACiB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC/Cf,KAAA,CAACT,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACG,IAAK;MAAAD,QAAA,GACvBjB,IAAA,CAACF,QAAQ;QAACqB,IAAI,EAAC,cAAc;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAS,CAAE,CAAC,EAC1DrB,IAAA,CAACR,IAAI;QAACsB,KAAK,EAAEC,MAAM,CAACO,QAAS;QAAAL,QAAA,EAAC;MAAO,CAAM,CAAC;IAAA,CACxC,CAAC,EACPjB,IAAA,CAACN,KAAK;MACJ6B,WAAW,EAAC,OAAO;MACnBC,QAAQ,EAAExB,IAAA,CAACJ,IAAI;QAACuB,IAAI,EAAC,OAAO;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAO,CAAE,CAAE;MACxDI,YAAY,EAAEjB,QAAS;MACvBkB,KAAK,EAAEnB;IAAM,CACd,CAAC,EACFP,IAAA,CAACN,KAAK;MACJ6B,WAAW,EAAC,OAAO;MACnBC,QAAQ,EAAExB,IAAA,CAACJ,IAAI;QAACuB,IAAI,EAAC,MAAM;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAO,CAAE,CAAE;MACvDM,eAAe;MACfF,YAAY,EAAEb,WAAY;MAC1Bc,KAAK,EAAEf;IAAS,CACjB,CAAC,EACFX,IAAA,CAACL,MAAM;MAACiC,KAAK,EAAC,QAAQ;MAACC,OAAO,EAAEhB;IAAY,CAAE,CAAC;EAAA,CACxB,CAAC;AAE9B,CAAC;AAED,IAAME,MAAM,GAAGxB,UAAU,CAACuC,MAAM,CAAC;EAC/Bd,SAAS,EAAE;IACTe,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,OAAO,EAAE;EACX,CAAC;EACDf,IAAI,EAAE;IACJgB,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE;EAChB,CAAC;EACDb,QAAQ,EAAE;IACRc,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAelC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}